// <auto-generated />
using System;
using ManufacturingExecutionSystem1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManufacturingExecutionSystem1.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240820081604_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.CaracterValues", b =>
                {
                    b.Property<int>("IDCaracterValues")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCaracterValues"));

                    b.Property<string>("CodeCaracter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ITemGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationArithmetique1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationArithmetique2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value1Caracter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2Caracter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCaracterValues");

                    b.HasIndex("CodeCaracter");

                    b.ToTable("CaracterValues");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Caracters", b =>
                {
                    b.Property<string>("CodeCaracter")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Activated")
                        .HasColumnType("bit");

                    b.Property<bool>("Activer_Controle_Soumission")
                        .HasColumnType("bit");

                    b.Property<string>("CodeProcess")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Code_OPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescCaracter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ForInput")
                        .HasColumnType("bit");

                    b.Property<int>("IDCaracters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCaracters"));

                    b.Property<string>("Image_Caracters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDatasheet")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRepetitif")
                        .HasColumnType("bit");

                    b.Property<bool>("IsResistance")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSearchCreteria")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpeed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsToolingParameter")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUCS")
                        .HasColumnType("bit");

                    b.Property<string>("Lien_Cararactere_Nb_Repetition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalDescCaracter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MasqueSaisie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ordre_Caracter")
                        .HasColumnType("int");

                    b.Property<int>("Ordre_Regroupement_Libille")
                        .HasColumnType("int");

                    b.Property<bool>("ParamStartOfShift")
                        .HasColumnType("bit");

                    b.Property<bool>("Print_Character_In_Separate_Label")
                        .HasColumnType("bit");

                    b.Property<string>("Regroupement_Libille")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Saisie_Automatique")
                        .HasColumnType("bit");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit_of_measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Valeur")
                        .HasColumnType("bit");

                    b.Property<bool>("VisibleInQualityView")
                        .HasColumnType("bit");

                    b.Property<bool>("Visible_InProductionView")
                        .HasColumnType("bit");

                    b.Property<bool>("Visual_Value")
                        .HasColumnType("bit");

                    b.Property<bool>("WithMaxMinValue")
                        .HasColumnType("bit");

                    b.HasKey("CodeCaracter");

                    b.HasIndex("CodeCaracter")
                        .IsUnique();

                    b.HasIndex("CodeProcess");

                    b.ToTable("Caracters");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.CaractersStartOfShiftValues", b =>
                {
                    b.Property<string>("CodeCaracterStartOFShift")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IDCaractersStartOfShiftValues")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDCaractersStartOfShiftValues"));

                    b.Property<string>("Id_Poste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Machine_Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeCaracterStartOFShift");

                    b.HasIndex("CodeCaracterStartOFShift")
                        .IsUnique();

                    b.HasIndex("Machine_Code");

                    b.ToTable("CaractersStartOfShiftValues");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Machine", b =>
                {
                    b.Property<string>("Machine_Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("ActualRecette_ValitadedSetup")
                        .HasColumnType("bit");

                    b.Property<string>("ActualUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActualUser_Qualite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte?>("Aff_Input_Interface_Prod")
                        .HasColumnType("tinyint");

                    b.Property<string>("Bulding")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProcess")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeZone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code_Machine_OPC")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code_Machine_Serial_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Code_Process2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Dec_In_Quality")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Disable_the_use_of_Machine_detected_Issues")
                        .HasColumnType("bit");

                    b.Property<string>("Format_Date_Report")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grp_Objectif")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDPlant_Machine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPlant_Machine"));

                    b.Property<bool?>("IRR_Real_Time_From_XML_File")
                        .HasColumnType("bit");

                    b.Property<string>("ImprimanteCmes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImprimantePanel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inc_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inc_Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspection_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inspection_Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Modif_Recipe_OPC_MUL")
                        .HasColumnType("bit");

                    b.Property<string>("NOK_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NOK_Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameMachine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NotConnected")
                        .HasColumnType("bit");

                    b.Property<string>("OK_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OK_Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("OnlyWithPO")
                        .HasColumnType("bit");

                    b.Property<byte?>("Plan_Affichage_Interface_Prod")
                        .HasColumnType("tinyint");

                    b.Property<bool?>("Print_Label_CB_QA")
                        .HasColumnType("bit");

                    b.Property<bool?>("Rapport_Externe")
                        .HasColumnType("bit");

                    b.Property<bool?>("Read_Report_With_Windows_Service")
                        .HasColumnType("bit");

                    b.Property<string>("ReadingReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepertoireReport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepertoireReportArchive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepertoireReportRejete")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SN_Machine")
                        .HasColumnType("bit");

                    b.Property<bool?>("ScrapDeclarationMode_A_1_M_0")
                        .HasColumnType("bit");

                    b.Property<string>("Setup_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Setup_Warehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StartingTimeCalculeStop")
                        .HasColumnType("int");

                    b.Property<bool?>("TPV100_100")
                        .HasColumnType("bit");

                    b.Property<int?>("Time_waiting_before_validation_next_report")
                        .HasColumnType("int");

                    b.Property<byte?>("TraitementPO")
                        .HasColumnType("tinyint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_Fic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type_Machine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Verifiation_Complement_Par_Ligne")
                        .HasColumnType("bit");

                    b.Property<bool?>("VerrouOF")
                        .HasColumnType("bit");

                    b.Property<bool?>("Wip_After_Validation_QA")
                        .HasColumnType("bit");

                    b.Property<bool?>("WithScrapDeclaration")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_CB_In_Production_NOK")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Consumption")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Consumption_ERP")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Contro_Input_BOM")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Control_Colorant")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Control_Insolation")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Control_Tape")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Integration_ERP")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Many_Input_For_Extrusion")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_PO_First")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Remplissage")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_Sequential_Consumption")
                        .HasColumnType("bit");

                    b.Property<bool?>("With_delete_report")
                        .HasColumnType("bit");

                    b.Property<bool?>("Without_Quality")
                        .HasColumnType("bit");

                    b.Property<string>("WorkCenter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("affectation_Direct_Ray")
                        .HasColumnType("bit");

                    b.HasKey("Machine_Code");

                    b.HasIndex("CodeProcess");

                    b.HasIndex("Code_Machine_OPC")
                        .IsUnique();

                    b.HasIndex("Code_Machine_Serial_Number")
                        .IsUnique();

                    b.HasIndex("Machine_Code")
                        .IsUnique();

                    b.ToTable("Machine");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Process", b =>
                {
                    b.Property<string>("CodeProcess")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Accept_OK_NOT_INC_Spools_As_input_Rewinders")
                        .HasColumnType("bit");

                    b.Property<bool>("Cnx_Par_Zone")
                        .HasColumnType("bit");

                    b.Property<string>("CodeProcessToRework")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dechet_Activate")
                        .HasColumnType("bit");

                    b.Property<string>("DescProcess")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EventDetectionIncludeSpooler")
                        .HasColumnType("bit");

                    b.Property<bool>("FTQ_update_in_the_Same_Shift")
                        .HasColumnType("bit");

                    b.Property<bool>("FTQwithFirstValidationQuality")
                        .HasColumnType("bit");

                    b.Property<bool>("HV_TEST")
                        .HasColumnType("bit");

                    b.Property<bool>("Hide_HU_from_NOK_Quality_label")
                        .HasColumnType("bit");

                    b.Property<int>("IDPorcess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPorcess"));

                    b.Property<string>("Img_Process")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InputForCmes")
                        .HasColumnType("bit");

                    b.Property<bool>("Input_Manual_MetaliqueNumber")
                        .HasColumnType("bit");

                    b.Property<int>("Long_Machine_Stop_min")
                        .HasColumnType("int");

                    b.Property<bool>("Many_Output_For_One_Input")
                        .HasColumnType("bit");

                    b.Property<int>("Model_Label")
                        .HasColumnType("int");

                    b.Property<bool>("NB_Wire_Fois_Recette")
                        .HasColumnType("bit");

                    b.Property<string>("PLC_Assigned")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("QAStopLabelRed")
                        .HasColumnType("bit");

                    b.Property<bool>("Quality_100_100")
                        .HasColumnType("bit");

                    b.Property<string>("ReturnValidationProfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Rework")
                        .HasColumnType("bit");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Stock_In_LPDM")
                        .HasColumnType("bit");

                    b.Property<bool>("WarehouseCMES")
                        .HasColumnType("bit");

                    b.Property<bool>("WarehouseIncomplet")
                        .HasColumnType("bit");

                    b.Property<bool>("WarehouseWithSupplierCode")
                        .HasColumnType("bit");

                    b.Property<bool>("Warehouse_Metal")
                        .HasColumnType("bit");

                    b.Property<bool>("WithIncomplete")
                        .HasColumnType("bit");

                    b.Property<bool>("WithQuality")
                        .HasColumnType("bit");

                    b.Property<bool>("WithQualityReturnValidation")
                        .HasColumnType("bit");

                    b.Property<bool>("WithScrapDeclaration")
                        .HasColumnType("bit");

                    b.Property<bool>("WithSetupMandatory")
                        .HasColumnType("bit");

                    b.Property<bool>("WithToolingVerification")
                        .HasColumnType("bit");

                    b.Property<bool>("WithValidationManualReport")
                        .HasColumnType("bit");

                    b.Property<bool>("WithValidationRequestColorant")
                        .HasColumnType("bit");

                    b.Property<bool>("WithValidationRequestInsolation")
                        .HasColumnType("bit");

                    b.Property<bool>("With_Demarrage")
                        .HasColumnType("bit");

                    b.Property<bool>("With_Metalic_Number_In_Prod")
                        .HasColumnType("bit");

                    b.Property<bool>("WithoutFifo")
                        .HasColumnType("bit");

                    b.HasKey("CodeProcess");

                    b.HasIndex("CodeProcess")
                        .IsUnique();

                    b.ToTable("Process");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Process_ProfilUser", b =>
                {
                    b.Property<string>("CodeProcess")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(1);

                    b.Property<string>("Id_Profil")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnOrder(2);

                    b.HasKey("CodeProcess", "Id_Profil");

                    b.HasIndex("Id_Profil");

                    b.ToTable("Process_ProfilUsers");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Product", b =>
                {
                    b.Property<string>("ItemCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("COdeTPV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeItemModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeItemModel_DVR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeItemNature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodePAC_DVR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProcess")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CodeRecette")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeTPV_DVR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code_Recette_DVR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("ConsumptionPerOneKM_outPut")
                        .HasColumnType("real");

                    b.Property<string>("Couleur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Couleur_Marquage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CunsumptionCopperKgPerOneKM")
                        .HasColumnType("int");

                    b.Property<int>("CunsumptionPVCKgPerOneKM")
                        .HasColumnType("int");

                    b.Property<double>("Diametre")
                        .HasColumnType("float");

                    b.Property<bool>("FG")
                        .HasColumnType("bit");

                    b.Property<string>("Famille")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProduct"));

                    b.Property<string>("ITemGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InforItem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalItemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ParentIDProduct")
                        .HasColumnType("int");

                    b.Property<string>("ParentItemCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Poids_Conducteur_Kg_Km")
                        .HasColumnType("real");

                    b.Property<float>("Poids_Insolation_Kg_Km")
                        .HasColumnType("real");

                    b.Property<float>("ResistanceOptimal")
                        .HasColumnType("real");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Speed")
                        .HasColumnType("real");

                    b.Property<string>("TypeMatiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeProduct")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Warehouse_WIP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("With_Rewinder")
                        .HasColumnType("bit");

                    b.Property<string>("couleurP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("couleurS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("m_min_m_sec")
                        .HasColumnType("tinyint");

                    b.HasKey("ItemCode");

                    b.HasIndex("CodeProcess");

                    b.HasIndex("ItemCode")
                        .IsUnique();

                    b.HasIndex("LocalItemCode")
                        .IsUnique();

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.ProfilUser", b =>
                {
                    b.Property<string>("Id_Profil")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IDProfiUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProfiUser"));

                    b.Property<string>("NomProfil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Profil");

                    b.HasIndex("Id_Profil")
                        .IsUnique();

                    b.ToTable("ProfilUser");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.ProgProfil", b =>
                {
                    b.Property<int>("IDProgProfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDProgProfil"));

                    b.Property<string>("Id_Profil")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Intitule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibProgramme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomProgramme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("onlyconsultation")
                        .HasColumnType("bit");

                    b.HasKey("IDProgProfil");

                    b.HasIndex("Id_Profil");

                    b.ToTable("ProgProfils");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.CaracterValues", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Caracters", "Caracters")
                        .WithMany("CaracterValues")
                        .HasForeignKey("CodeCaracter")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Caracters");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Caracters", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Process", "Process")
                        .WithMany("Caracters")
                        .HasForeignKey("CodeProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.CaractersStartOfShiftValues", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Machine", "Machine")
                        .WithMany("CaractersStartOfShiftValues")
                        .HasForeignKey("Machine_Code")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Machine", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Process", "Process")
                        .WithMany("Machines")
                        .HasForeignKey("CodeProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Process_ProfilUser", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Process", "Process")
                        .WithMany("Process_ProfilUsers")
                        .HasForeignKey("CodeProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManufacturingExecutionSystem1.entities.ProfilUser", "ProfilUser")
                        .WithMany("Process_ProfilUsers")
                        .HasForeignKey("Id_Profil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");

                    b.Navigation("ProfilUser");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Product", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.Process", "Process")
                        .WithMany("Products")
                        .HasForeignKey("CodeProcess")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Process");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.ProgProfil", b =>
                {
                    b.HasOne("ManufacturingExecutionSystem1.entities.ProfilUser", "ProfilUser")
                        .WithMany("ProgProfiles")
                        .HasForeignKey("Id_Profil")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfilUser");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Caracters", b =>
                {
                    b.Navigation("CaracterValues");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Machine", b =>
                {
                    b.Navigation("CaractersStartOfShiftValues");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.Process", b =>
                {
                    b.Navigation("Caracters");

                    b.Navigation("Machines");

                    b.Navigation("Process_ProfilUsers");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManufacturingExecutionSystem1.entities.ProfilUser", b =>
                {
                    b.Navigation("Process_ProfilUsers");

                    b.Navigation("ProgProfiles");
                });
#pragma warning restore 612, 618
        }
    }
}
